
a.out:     file format elf64-littleaarch64


Disassembly of section .plt:

0000000000400630 <printf@plt-0x20>:
  400630:	a9bf7bf0 	stp	x16, x30, [sp,#-16]!
  400634:	90000090 	adrp	x16, 410000 <main+0xf7e4>
  400638:	f947d211 	ldr	x17, [x16,#4000]
  40063c:	913e8210 	add	x16, x16, #0xfa0
  400640:	d61f0220 	br	x17
  400644:	d503201f 	nop
  400648:	d503201f 	nop
  40064c:	d503201f 	nop

0000000000400650 <printf@plt>:
  400650:	90000090 	adrp	x16, 410000 <main+0xf7e4>
  400654:	f947d611 	ldr	x17, [x16,#4008]
  400658:	913ea210 	add	x16, x16, #0xfa8
  40065c:	d61f0220 	br	x17

0000000000400660 <__stack_chk_fail@plt>:
  400660:	90000090 	adrp	x16, 410000 <main+0xf7e4>
  400664:	f947da11 	ldr	x17, [x16,#4016]
  400668:	913ec210 	add	x16, x16, #0xfb0
  40066c:	d61f0220 	br	x17

0000000000400670 <puts@plt>:
  400670:	90000090 	adrp	x16, 410000 <main+0xf7e4>
  400674:	f947de11 	ldr	x17, [x16,#4024]
  400678:	913ee210 	add	x16, x16, #0xfb8
  40067c:	d61f0220 	br	x17

0000000000400680 <__libc_init@plt>:
  400680:	90000090 	adrp	x16, 410000 <main+0xf7e4>
  400684:	f947e211 	ldr	x17, [x16,#4032]
  400688:	913f0210 	add	x16, x16, #0xfc0
  40068c:	d61f0220 	br	x17

0000000000400690 <__cxa_atexit@plt>:
  400690:	90000090 	adrp	x16, 410000 <main+0xf7e4>
  400694:	f947e611 	ldr	x17, [x16,#4040]
  400698:	913f2210 	add	x16, x16, #0xfc8
  40069c:	d61f0220 	br	x17

Disassembly of section .text:

00000000004006a0 <_start>:
  4006a0:	8b3f63e0 	add	x0, sp, xzr
  4006a4:	14000007 	b	4006c0 <do_arm64_start>

00000000004006a8 <__atexit_handler_wrapper>:
  4006a8:	a9bf7bfd 	stp	x29, x30, [sp,#-16]!
  4006ac:	910003fd 	mov	x29, sp
  4006b0:	b4000040 	cbz	x0, 4006b8 <__atexit_handler_wrapper+0x10>
  4006b4:	d63f0000 	blr	x0
  4006b8:	a8c17bfd 	ldp	x29, x30, [sp],#16
  4006bc:	d65f03c0 	ret

00000000004006c0 <do_arm64_start>:
  4006c0:	90000082 	adrp	x2, 410000 <main+0xf7e4>
  4006c4:	90000086 	adrp	x6, 410000 <main+0xf7e4>
  4006c8:	90000085 	adrp	x5, 410000 <main+0xf7e4>
  4006cc:	90000084 	adrp	x4, 410000 <main+0xf7e4>
  4006d0:	a9bd7bfd 	stp	x29, x30, [sp,#-48]!
  4006d4:	d2800001 	mov	x1, #0x0                   	// #0
  4006d8:	910003fd 	mov	x29, sp
  4006dc:	f947f0c6 	ldr	x6, [x6,#4064]
  4006e0:	910063a3 	add	x3, x29, #0x18
  4006e4:	f947fca5 	ldr	x5, [x5,#4088]
  4006e8:	f947f884 	ldr	x4, [x4,#4080]
  4006ec:	f947ec42 	ldr	x2, [x2,#4056]
  4006f0:	f9000fa6 	str	x6, [x29,#24]
  4006f4:	f90013a5 	str	x5, [x29,#32]
  4006f8:	f90017a4 	str	x4, [x29,#40]
  4006fc:	97ffffe1 	bl	400680 <__libc_init@plt>

0000000000400700 <atexit>:
  400700:	aa0003e1 	mov	x1, x0
  400704:	b0000082 	adrp	x2, 411000 <__dso_handle>
  400708:	90000000 	adrp	x0, 400000 <note_android_ident-0x218>
  40070c:	91000042 	add	x2, x2, #0x0
  400710:	911aa000 	add	x0, x0, #0x6a8
  400714:	17ffffdf 	b	400690 <__cxa_atexit@plt>

0000000000400718 <testb>:
#include <stdio.h>
int testb(int a) {
  400718:	d10083ff 	sub	sp, sp, #0x20
  40071c:	b9000fe0 	str	w0, [sp,#12]
    int x = a -1;
  400720:	b9400fe0 	ldr	w0, [sp,#12]
  400724:	51000400 	sub	w0, w0, #0x1
  400728:	b9001fe0 	str	w0, [sp,#28]
    return x;
  40072c:	b9401fe0 	ldr	w0, [sp,#28]
}
  400730:	910083ff 	add	sp, sp, #0x20
  400734:	d65f03c0 	ret

0000000000400738 <testa>:
int testa(int a,int b, int c1,int c2,int c3,int c4,int c5,int c6,int c7, int c8,int c9) {
  400738:	a9ba7bfd 	stp	x29, x30, [sp,#-96]!
  40073c:	910003fd 	mov	x29, sp
  400740:	b9002fa0 	str	w0, [x29,#44]
  400744:	b9002ba1 	str	w1, [x29,#40]
  400748:	b90027a2 	str	w2, [x29,#36]
  40074c:	b90023a3 	str	w3, [x29,#32]
  400750:	b9001fa4 	str	w4, [x29,#28]
  400754:	b9001ba5 	str	w5, [x29,#24]
  400758:	b90017a6 	str	w6, [x29,#20]
  40075c:	b90013a7 	str	w7, [x29,#16]
  400760:	90000080 	adrp	x0, 410000 <main+0xf7e4>
  400764:	f947f400 	ldr	x0, [x0,#4072]
  400768:	f9400000 	ldr	x0, [x0]
  40076c:	f9002fa0 	str	x0, [x29,#88]
//int testa(int a,int b) {
    int x = a + b;
  400770:	b9402fa1 	ldr	w1, [x29,#44]
  400774:	b9402ba0 	ldr	w0, [x29,#40]
  400778:	0b000020 	add	w0, w1, w0
  40077c:	b9003ba0 	str	w0, [x29,#56]

    int k[5]={1,2,3,4,5};
  400780:	910103a0 	add	x0, x29, #0x40
  400784:	52800021 	mov	w1, #0x1                   	// #1
  400788:	b9000001 	str	w1, [x0]
  40078c:	910103a0 	add	x0, x29, #0x40
  400790:	52800041 	mov	w1, #0x2                   	// #2
  400794:	b9000401 	str	w1, [x0,#4]
  400798:	910103a0 	add	x0, x29, #0x40
  40079c:	52800061 	mov	w1, #0x3                   	// #3
  4007a0:	b9000801 	str	w1, [x0,#8]
  4007a4:	910103a0 	add	x0, x29, #0x40
  4007a8:	52800081 	mov	w1, #0x4                   	// #4
  4007ac:	b9000c01 	str	w1, [x0,#12]
  4007b0:	910103a0 	add	x0, x29, #0x40
  4007b4:	528000a1 	mov	w1, #0x5                   	// #5
  4007b8:	b9001001 	str	w1, [x0,#16]
    int y = testb(x);
  4007bc:	b9403ba0 	ldr	w0, [x29,#56]
  4007c0:	97ffffd6 	bl	400718 <testb>
  4007c4:	b9003fa0 	str	w0, [x29,#60]
    return y;
  4007c8:	b9403fa0 	ldr	w0, [x29,#60]
}
  4007cc:	90000081 	adrp	x1, 410000 <main+0xf7e4>
  4007d0:	f947f421 	ldr	x1, [x1,#4072]
  4007d4:	f9402fa2 	ldr	x2, [x29,#88]
  4007d8:	f9400021 	ldr	x1, [x1]
  4007dc:	eb01005f 	cmp	x2, x1
  4007e0:	54000040 	b.eq	4007e8 <testa+0xb0>
  4007e4:	97ffff9f 	bl	400660 <__stack_chk_fail@plt>
  4007e8:	a8c67bfd 	ldp	x29, x30, [sp],#96
  4007ec:	d65f03c0 	ret

00000000004007f0 <testc>:
int testc(int a[]) {
  4007f0:	d10043ff 	sub	sp, sp, #0x10
  4007f4:	f90007e0 	str	x0, [sp,#8]
    a[0] = 1;
  4007f8:	f94007e0 	ldr	x0, [sp,#8]
  4007fc:	52800021 	mov	w1, #0x1                   	// #1
  400800:	b9000001 	str	w1, [x0]
    a[1] = 2;
  400804:	f94007e0 	ldr	x0, [sp,#8]
  400808:	91001000 	add	x0, x0, #0x4
  40080c:	52800041 	mov	w1, #0x2                   	// #2
  400810:	b9000001 	str	w1, [x0]
}
  400814:	910043ff 	add	sp, sp, #0x10
  400818:	d65f03c0 	ret

000000000040081c <main>:
int main() {
  40081c:	d10183ff 	sub	sp, sp, #0x60
  400820:	a9027bfd 	stp	x29, x30, [sp,#32]
  400824:	910083fd 	add	x29, sp, #0x20
  400828:	90000080 	adrp	x0, 410000 <main+0xf7e4>
  40082c:	f947f400 	ldr	x0, [x0,#4072]
  400830:	f9400000 	ldr	x0, [x0]
  400834:	f9001fa0 	str	x0, [x29,#56]
    printf("aapcs64\n");
  400838:	90000000 	adrp	x0, 400000 <note_android_ident-0x218>
  40083c:	91242000 	add	x0, x0, #0x908
  400840:	97ffff8c 	bl	400670 <puts@plt>
    int a = testa(1,3,1,2,3,4,5,6,7,8,9);
  400844:	528000e0 	mov	w0, #0x7                   	// #7
  400848:	b90003e0 	str	w0, [sp]
  40084c:	52800100 	mov	w0, #0x8                   	// #8
  400850:	b9000be0 	str	w0, [sp,#8]
  400854:	52800120 	mov	w0, #0x9                   	// #9
  400858:	b90013e0 	str	w0, [sp,#16]
  40085c:	52800020 	mov	w0, #0x1                   	// #1
  400860:	52800061 	mov	w1, #0x3                   	// #3
  400864:	52800022 	mov	w2, #0x1                   	// #1
  400868:	52800043 	mov	w3, #0x2                   	// #2
  40086c:	52800064 	mov	w4, #0x3                   	// #3
  400870:	52800085 	mov	w5, #0x4                   	// #4
  400874:	528000a6 	mov	w6, #0x5                   	// #5
  400878:	528000c7 	mov	w7, #0x6                   	// #6
  40087c:	97ffffaf 	bl	400738 <testa>
  400880:	b9001fa0 	str	w0, [x29,#28]
    printf("a = %d\n",a);
  400884:	90000000 	adrp	x0, 400000 <note_android_ident-0x218>
  400888:	91244000 	add	x0, x0, #0x910
  40088c:	b9401fa1 	ldr	w1, [x29,#28]
  400890:	97ffff70 	bl	400650 <printf@plt>
    int k[5]={1,2,3,4,5};
  400894:	910083a0 	add	x0, x29, #0x20
  400898:	52800021 	mov	w1, #0x1                   	// #1
  40089c:	b9000001 	str	w1, [x0]
  4008a0:	910083a0 	add	x0, x29, #0x20
  4008a4:	52800041 	mov	w1, #0x2                   	// #2
  4008a8:	b9000401 	str	w1, [x0,#4]
  4008ac:	910083a0 	add	x0, x29, #0x20
  4008b0:	52800061 	mov	w1, #0x3                   	// #3
  4008b4:	b9000801 	str	w1, [x0,#8]
  4008b8:	910083a0 	add	x0, x29, #0x20
  4008bc:	52800081 	mov	w1, #0x4                   	// #4
  4008c0:	b9000c01 	str	w1, [x0,#12]
  4008c4:	910083a0 	add	x0, x29, #0x20
  4008c8:	528000a1 	mov	w1, #0x5                   	// #5
  4008cc:	b9001001 	str	w1, [x0,#16]
    testc(k);
  4008d0:	910083a0 	add	x0, x29, #0x20
  4008d4:	97ffffc7 	bl	4007f0 <testc>
    return 0;
  4008d8:	52800000 	mov	w0, #0x0                   	// #0
}
  4008dc:	90000081 	adrp	x1, 410000 <main+0xf7e4>
  4008e0:	f947f421 	ldr	x1, [x1,#4072]
  4008e4:	f9401fa2 	ldr	x2, [x29,#56]
  4008e8:	f9400021 	ldr	x1, [x1]
  4008ec:	eb01005f 	cmp	x2, x1
  4008f0:	54000040 	b.eq	4008f8 <main+0xdc>
  4008f4:	97ffff5b 	bl	400660 <__stack_chk_fail@plt>
  4008f8:	d10083bf 	sub	sp, x29, #0x20
  4008fc:	a9427bfd 	ldp	x29, x30, [sp,#32]
  400900:	910183ff 	add	sp, sp, #0x60
  400904:	d65f03c0 	ret
